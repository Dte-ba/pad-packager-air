<?xml version="1.0" encoding="utf-8"?>
<dte:Step xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:dte="library://ns.nticx.net/flex/2014"
			   initialize="onInitialize(event)">
	
    <!--
	 This file is part of PAD packager.
	
	 please see the LICENSE
	-->
	
	<fx:Script>
		<![CDATA[
		import com.dte.filesystem.FileProvider;
		import com.dte.filesystem.FileUtils;
		import com.dte.html.NativeAlert;
		import com.dte.images.ImageConverter;
		import com.dte.images.ImageEvent;
		import flash.filesystem.File;
		import flash.net.FileFilter;
		import com.dte.pad.ui.MessageRef;
		import com.dte.pad.Package;
		
		private var alert:NativeAlert = new NativeAlert();
		
		// image files
		public var thumbFile:File;
		
		public var contentFile:File;
		
		private var imagesFilter:FileFilter = new FileFilter("Imagenes", "*.jpg;*.gif;*.png");
		
		private var _targetPackage:com.dte.pad.Package;
		
		private var _loadFromPackage:Boolean = false;
		
		[Bindable]private var _imgThumbSource:*;
		
		[Bindable]private var _imgContentSource:*;
			
		private var _defaultPath:String = File.desktopDirectory.nativePath;
		
		private var _filesCreated:Boolean = false;
		
		[Bindable]private var _processing:Boolean = false;
		
		public function onInitialize(event:Event) : void {
			
		}
		
		override public function activate(from:String = ""):void 
		{
			super.activate(from);
			
			if (!_filesCreated) {
				this.thumbFile = new File(this.defaultPath);
				this.contentFile = new File(this.defaultPath);
				
				this.thumbFile.addEventListener(Event.SELECT, onThumbFileSelected);
				this.contentFile.addEventListener(Event.SELECT, onContentFileSelected);
				_filesCreated = true;
			}
			
		}
		
		[Bindable]
		public function get targetPackage():com.dte.pad.Package 
		{
			return _targetPackage;
		}
		
		public function set targetPackage(value:com.dte.pad.Package):void 
		{
			_targetPackage = value;
		}
		
		[Bindable]
		public function get defaultPath():String 
		{
			return _defaultPath;
		}
		
		public function set defaultPath(value:String):void 
		{
			_defaultPath = value;
		}
		
		private function onThumbFileSelected(e:Event):void {
			this.defaultPath = FileUtils.getFolderName(thumbFile);
			
			var ic:ImageConverter = new ImageConverter();
			ic.addEventListener(ImageEvent.CONVERTED, onThumbConverted);
			ic.convert(thumbFile.nativePath, 320, 240);
			_processing = true;
		}
		
		private function onThumbConverted(e:ImageEvent):void 
		{
			try  {
				imgThumb.source = e.file.nativePath;
				targetPackage.imgThumb  = e.file;
			}
			catch (err:Error) {
				targetPackage.imgThumb  = null;
			}
			
			_processing = false;
		}
		
		private function onContentFileSelected(e:Event):void {
			this.defaultPath = FileUtils.getFolderName(contentFile.nativePath);
			
			var ic:ImageConverter = new ImageConverter();
			ic.addEventListener(ImageEvent.CONVERTED, onContentConverted);
			ic.convert(contentFile.nativePath, 1024, 768);
			_processing = true;
			
			try  {
				
				
				imgContent.source = contentFile.nativePath;
				targetPackage.imgContent  = contentFile;
			}
			catch (err:Error) {
				targetPackage.imgContent  = null;
			}
		}
		
		private function onContentConverted(e:ImageEvent):void 
		{
			try  {
				imgContent.source = e.file.nativePath;
				targetPackage.imgContent  =  e.file;
			}
			catch (err:Error) {
				targetPackage.imgContent  = null;
			}
			
			_processing = false;
		}
		
		protected function btnSeleccionarThumb_click(event:MouseEvent) : void {
			this.thumbFile.browseForOpen(MessageRef.DIALOG_SELECT_IMAGE_FILE, [ imagesFilter ]);
		}
		
		protected function btnSeleccionarContent_click(event:MouseEvent) : void {
			this.contentFile.browseForOpen(MessageRef.DIALOG_SELECT_IMAGE_FILE, [ imagesFilter ]);
		}
		
		private function hasErrors() : Boolean {
		
			if (targetPackage.imgThumb  == null) {
				alert.alert(MessageRef.ERROR_ACCES_IMAGE_NOT_SELECTED);
				return true;
			}
			
			if (targetPackage.imgContent == null) {
				alert.alert(MessageRef.ERROR_CONTENT_IMAGE_NOT_SELECTED);
				return true;
			}
			
		   return false;
		}
		
		override public function isValid():Boolean 
		{
			if ( !super.isValid() ) { return false; }
			
			if (hasErrors()) return false;
			
			return true;
		}
		
		override public function reset():void 
		{
			super.reset();
			_imgThumbSource = null;
			_imgContentSource = null;
		}
		
		public function loadImageFromPackage() : void 
		{
			_imgThumbSource = this.targetPackage.imgThumb.nativePath;
			_imgContentSource = this.targetPackage.imgContent.nativePath;
		}
		
		]]>
	</fx:Script>
	
	<fx:Declarations>
	</fx:Declarations>
	
	<s:HGroup height="30" width="100%" horizontalAlign="center" visible="{!_processing}">
		<s:VGroup horizontalCenter="0" verticalCenter="0" horizontalAlign="center">
			<s:Label text="Portada" horizontalCenter="0"/>
			<s:Image source="@Embed('/assets/img/portada.png')"
				 id="btnSeleccionarThumb"   
				 click="btnSeleccionarThumb_click(event)"
				 horizontalCenter="0"
				 useHandCursor="true" buttonMode="true" mouseChildren="false"
				 toolTip="Esta imagen identificará tu recurso" />
		</s:VGroup>
		
		<s:VGroup horizontalCenter="0" verticalCenter="0" horizontalAlign="center">
			<s:Label text="Ficha técnica" horizontalCenter="0"/>
			<s:Image source="@Embed('/assets/img/ficha_tecnica.png')"
					 id="btnSeleccionarContent" horizontalCenter="0"
					 click="btnSeleccionarContent_click(event)"
					 useHandCursor="true" buttonMode="true" mouseChildren="false"
					 toolTip="Sugerimos cargar una captura de pantalla del recurso" />
		</s:VGroup>
		<!--
		<s:Button id="btnSeleccionarThumb" label="Seleccionar imagen del Material [...]" click="btnSeleccionarThumb_click(event)" />
		<s:Button id="btnSeleccionarContent" label="Seleccionar imagen de la Ficha Técnica [...]"  click="btnSeleccionarContent_click(event)"/>
		-->
	</s:HGroup>
	
	<s:Scroller top="130" bottom="0" width="100%" visible="{!_processing}">
		<s:VGroup width="100%" horizontalAlign="center" verticalAlign="top">
			<s:Label text="Imagen del Material" />
			<s:Image id="imgThumb" source="@{_imgThumbSource}" />
			
			<s:Label text="Imagen de la Ficha Técnica" />
			<s:Image id="imgContent" source="@{_imgContentSource}" />
		</s:VGroup>
	</s:Scroller>
	
	<s:Label text="Procesando imagen ..." verticalCenter="0" horizontalCenter="0" visible="{_processing}"/>
	
</dte:Step>