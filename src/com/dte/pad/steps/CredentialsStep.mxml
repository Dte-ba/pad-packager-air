<?xml version="1.0" encoding="utf-8"?>
<dte:Step xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:dte="library://ns.nticx.net/flex/2014">
	 
    <!--
	 This file is part of PAD packager.
	
	 please see the LICENSE
	-->
	
	<fx:Script>
		<![CDATA[
		import com.dte.html.NativeAlert;
		import com.dte.pad.SecurityToken;
		import mx.validators.EmailValidator;
		import mx.validators.StringValidator;
		import mx.validators.ValidationResult;
		import com.dte.pad.ui.MessageRef;
	    import com.dte.pad.Package;
		
		private var alert:NativeAlert = new NativeAlert();
		
		private var _nameValidator:StringValidator;
		
		private var _emailValidator:EmailValidator;
		
		private var _token:SecurityToken = new SecurityToken();
		
		[Bindable]
		public function get token():SecurityToken 
		{
			return _token;
		}
		
		public function set token(value:SecurityToken):void 
		{
			_token = value;
		}
					
		override public function activate(from:String = ""):void 
		{
			super.activate(from);
			
			if (from == "next") return;
			
			if (from == "back") {
				refreshValidators();
			}
		}
		
		private function hasErrors() : Boolean {
			var tresults:Array = _nameValidator.validate().results;
			var dresults:Array = _emailValidator.validate().results;
			
			for each(var r:ValidationResult in tresults) {
				if (r.isError) {
					alert.alert(MessageRef.ERROR_REQUIERED_FIELD);
					return true;
				}
			}
			
			for each(var rd:ValidationResult in dresults) {
				if (rd.isError) {
					alert.alert(MessageRef.ERROR_REQUIERED_FIELD);
					return true;
				}
			}
			
		   return false;
		}
		
		private function refreshValidators():void 
		{	
			if (_nameValidator == null && _emailValidator == null) {
				_nameValidator = new StringValidator();
				_emailValidator = new EmailValidator();
			
				_nameValidator.source = txtName;
				_nameValidator.property = "text";
				_nameValidator.required = true;
				_nameValidator.requiredFieldError = "*";
				
				_emailValidator.source = txtEmail;
				_emailValidator.property = "text";
				_emailValidator.required = true;
				_emailValidator.requiredFieldError = "*";
			} else {
				_emailValidator.source.errorString = "";
				_emailValidator.source.errorString = "";
			}
		}
		
		override public function isValid():Boolean 
		{
			if ( !super.isValid() ) { return false; }
			
			if (hasErrors()) return false;
			
			return true;
		}
		
		]]>
	</fx:Script>
	
	<fx:Declarations>
	</fx:Declarations>
	
	<s:VGroup width="100%" horizontalAlign="center" verticalCenter="0">
		<s:Form id="formPackage" width="500">
				<s:FormHeading label="Credenciales" />
				
				<s:FormItem label="Nombre">
					<s:TextInput id="txtName" width="100%" text="@{token.name}" />
				</s:FormItem>
				
				<s:FormItem label="Email">
					<s:TextInput id="txtEmail" width="100%" text="@{token.email}"/>
				</s:FormItem>
			
			</s:Form>
	</s:VGroup>
	
</dte:Step>