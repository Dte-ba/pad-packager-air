<?xml version="1.0" encoding="utf-8"?>
<dte:Step xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   xmlns:dte="library://ns.nticx.net/flex/2014"
		   initialize="onInitialize(event)">
	
    <!--
	 This file is part of PAD packager.
	
	 please see the LICENSE
	-->
	
	<fx:Script>
		<![CDATA[
		import com.dte.filesystem.FileProvider;
		import com.dte.formatters.StringFormatter;
		import com.dte.html.NativeAlert;
		import com.dte.pad.Package;
		import com.dte.pad.ui.MessageRef;
		import flash.events.MouseEvent;
		import flash.filesystem.File;
		import mx.collections.ArrayCollection;
		import spark.components.gridClasses.GridColumn;
		import mx.binding.utils.BindingUtils;
		
		private var _fileProvider:FileProvider;
		
		[Bindable]private var _selectedFiles:ArrayCollection;
		
	    private var stringFormatter:StringFormatter;
	   
	    private var alert:NativeAlert = new NativeAlert();
		
		public function onInitialize(event:Event) : void {
			this._selectedFiles = new ArrayCollection();
		    this.stringFormatter = new StringFormatter();
		}
		
		[Bindable]
		public function get fileProvider():FileProvider 
		{
			return _fileProvider;
		}
		
		public function set fileProvider(value:FileProvider):void 
		{
			_fileProvider = value;
		}
				
		override public function activate(from:String = ""):void 
		{
			
	    }
		
		private function hasErrors() : Boolean {
		   return false;
		}
		
		override public function isValid():Boolean 
		{
			if ( !super.isValid() ) { return false; }
			
			if (hasErrors()) return false;
			
			return true;
		}
		
		public function reset() : void {
			this.fileProvider.reset();
			this._selectedFiles.removeAll();
	    }
	   
		protected function clearFiles() : void {
			reset();
		}
		
		// grid handlers
		private function onDataGridSelected(event:Event) : void {
			
			this._selectedFiles.removeAll();
			
			if (_grid.selectedItems.length == 0) {
				return;
			}
			
			for each(var f:File in _grid.selectedItems) {
				_selectedFiles.addItem( f );
			}
			
		}
		
		protected function onDeleteFiles(event:MouseEvent) : void {
			this.fileProvider.deleteFiles(_selectedFiles);
			_selectedFiles.removeAll();
		}
		
		protected function onClearFiles(event:MouseEvent) : void {
			reset();
		}
	
	    private function onAddFiles(e:MouseEvent):void {
			this.fileProvider.addDialog(e.target == this.addFolderButton);
		}
		
		// label functions
		private function getFileNameLabel(item:Object, column:GridColumn):String {
			return this.fileProvider.getRelativeFileName(item as File);
		}

		private function getFileSizeLabel(item:Object, column:GridColumn):String {
			return this.stringFormatter.getFormattedFileSize(Number(item.size));
		}

		private function getFileDateLabel(item:Object, column:GridColumn):String {
			return this.stringFormatter.getFormattedDate(item.creationDate);
		}
		
		]]>
	</fx:Script>
	
	<fx:Declarations>
	</fx:Declarations>
	
	<s:Label text="Archivos" top="10" />
	
	<s:DataGrid id="_grid" width="100%" dataProvider="{this.fileProvider.files}" selectionChange="onDataGridSelected(event);" top="30" bottom="40">
		<s:columns>
			<mx:ArrayList>
				<s:GridColumn headerText="Nombre" labelFunction="getFileNameLabel"/>
				<s:GridColumn headerText="TamaÃ±o" labelFunction="getFileSizeLabel" width="92"/>
				<s:GridColumn headerText="Creado" labelFunction="getFileDateLabel" width="140"/>
			</mx:ArrayList>
		</s:columns>
	</s:DataGrid>
	
	<s:HGroup width="100%" bottom="0">
		<s:Button label="Agregar Archivos ..." id="addFilesButton" click="onAddFiles(event);"/>
		<s:Button label="Agregar Carpeta ..." id="addFolderButton" click="onAddFiles(event);"/>
		
		<s:Button label="Quitar" id="btnQuitar" click="onDeleteFiles(event);" enabled="{_selectedFiles.length &gt; 0}" />
		<s:Button label="Quitar Todos" id="btnClear" click="onClearFiles(event);" enabled="{this.fileProvider.files.length &gt; 0}" />
	</s:HGroup>
	
</dte:Step>